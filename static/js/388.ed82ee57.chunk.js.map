{"version":3,"file":"static/js/388.ed82ee57.chunk.js","mappings":"mBAMAA,KAAKC,UAAaC,IAChBF,KAAKG,YAAY,CACfC,EAAGF,EAAEG,KACLC,KAAMC,EAAUL,EAAEG,OAClB,EAUJ,MAAME,EAAaH,GACbA,EAAI,EACCA,EAEAG,EAAUH,EAAI,GAAKG,EAAUH,EAAI,E","sources":["fibonacci-worker.ts"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n\n/**\n *\n * @param e\n */\nself.onmessage = (e: MessageEvent<number>) => {\n  self.postMessage({\n    n: e.data,\n    term: fibonacci(e.data),\n  });\n};\n\n/**\n * this function recursively does the computation for fibonacci\n *\n * This function could be imported into this file from another\n * @param n\n * @returns\n */\nconst fibonacci = (n: number): number => {\n  if (n < 2) {\n    return n;\n  } else {\n    return fibonacci(n - 1) + fibonacci(n - 2);\n  }\n};\n\nexport {};\n"],"names":["self","onmessage","e","postMessage","n","data","term","fibonacci"],"sourceRoot":""}